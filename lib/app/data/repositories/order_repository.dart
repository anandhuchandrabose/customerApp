// lib/app/data/repositories/order_repository.dart

import 'dart:convert';
import '../services/api_service.dart';

class OrderRepository {
  final ApiService api; 

  OrderRepository({required this.api});

  Future<Map<String, dynamic>> placeOrder(Map<String, String> map, {required String paymentMethod}) async {
    // Merge the provided map with the required paymentMethod key.
    final requestBody = {
      ...map,
      'paymentMethod': paymentMethod,
    };

    final response = await api.post('/api/order/place-order', requestBody);

    print("POST /place-order status: ${response.statusCode}");
    print("POST /place-order response: ${response.body}");

    // Accept both 200 (OK) and 201 (Created) as success responses.
    if (response.statusCode == 200 || response.statusCode == 201) {
      return jsonDecode(response.body);
    } else {
      final error = jsonDecode(response.body);
      throw Exception(error['message'] ?? 'Failed to place order');
    }
  }

  /// POST /api/order/verify-payment
  ///
  /// This method now sends the payload keys that your backend expects:
  /// - "razorpay_order_id"
  /// - "razorpay_payment_id"
  /// - "razorpay_signature"
  ///
  /// Ensure that the parameters are passed in the correct order:
  /// [orderId] should be the Razorpay order id,
  /// [paymentId] should be the Razorpay payment id,
  /// [signature] is the signature generated by Razorpay.
  Future<Map<String, dynamic>> verifyPayment(String orderId, String paymentId, String signature) async {
    final response = await api.post(
      '/api/order/verify-payment',
      {
        'razorpay_order_id': orderId,
        'razorpay_payment_id': paymentId,
        'razorpay_signature': signature,
      },
    );

    print("POST /verify-payment status: ${response.statusCode}");
    print("POST /verify-payment response: ${response.body}"); 

    if (response.statusCode == 200) {
      return jsonDecode(response.body);
    } else {
      final error = jsonDecode(response.body);
      throw Exception(error['message'] ?? 'Failed to verify payment');
    }
  }
}
